<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NantCom.MultiStreamer"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Data="clr-namespace:NantCom.MultiStreamer.Data" x:Class="NantCom.MultiStreamer.MainWindow"
        xmlns:Vlc="clr-namespace:Vlc.DotNet.Wpf;assembly=Vlc.DotNet.Wpf"
        mc:Ignorable="d"
        Title="NantCom's Multi Streamer" FontFamily="/NantCom.MultiStreamer;component/Fonts/#Cloud Light" FontSize="14" MinHeight="550" MinWidth="640" Width="532" >
    <Controls:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate x:Key="TabHeader">
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Mode=OneWay}" FontFamily="Oswald" FontWeight="Light" FontSize="36"/>
        </DataTemplate>
    </Controls:MetroWindow.Resources>
    <Window.DataContext>
        <Data:ProjectData/>
    </Window.DataContext>
    <Grid Background="#FF252525" DataContext="{Binding Default, Mode=OneWay}" Margin="0,0,0,0">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="NginxState">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NginxOff">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorNginx">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF003004"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NginxOn">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorNginx">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF00FF17"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NginxStarting">
                    <Storyboard RepeatBehavior="Forever">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorNginx">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF00D63A"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF003A10"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF00D63A"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FFMpegState">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="FFMpegOff">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorFFMpeg">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF003004"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FFMpegOn">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorFFMpeg">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF00FF17"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FFMpegStarting">
                    <Storyboard RepeatBehavior="Forever">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndicatorFFMpeg">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF00D63A"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF003A10"/>
                            <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF00D63A"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="QSVState">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="QSVOff">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FeatureQSV">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="QSVOn"/>
                <VisualState x:Name="QSVStarting">
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FeatureQSV">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <TabControl x:Name="MainTab" Margin="20" SelectionChanged="TabControl_SelectionChanged">
            <TabItem Header="ABOUT" HeaderTemplate="{DynamicResource TabHeader}">
                <StackPanel Margin="20,0,0,0">
                    <TextBlock TextWrapping="Wrap" Margin="0,0,10,0"><Run Text="This application allows you to use Open Broadcaster Software (OBS) to steam to Twitch, Facebook Live and YouTube Live all at the same time!"/><LineBreak/><Run/><LineBreak/><Run Text="This app is inspired by "/><Hyperlink FontWeight="Bold" TargetName="https://obsproject.com/forum/resources/how-to-set-up-your-own-private-rtmp-server-using-nginx.50/"><Run Text="this great guide"/></Hyperlink><Run Text=" and after fiddling with lots of stuffs for a few days, I have managed to get everything working. But it requires very complicated setup, I decided to create an app which does all that stuffs so every streamer can benefit from my newly gained 'art of streaming' skill."/><LineBreak/><Run/><LineBreak/><Run Text="Check out my Custom Laptop Brand: "/><Hyperlink Foreground="#FF6D6D6D" FontWeight="Bold" TargetName="https://obsproject.com/forum/resources/how-to-set-up-your-own-private-rtmp-server-using-nginx.50/" TextDecorations="Underline"><Run Text="LEVEL51"/></Hyperlink><LineBreak/><Run Text="Our Twitch Channel (Thai Language):"/></TextBlock>

                </StackPanel>
            </TabItem>

            <TabItem Header="KEYS" HeaderTemplate="{DynamicResource TabHeader}">
                <StackPanel Margin="20,0,0,0">
                    <TextBlock TextWrapping="Wrap" Margin="0,0,10,0" Text="Please provide your stream keys for each service here, just leave it blank if you don't want to use any of them. You can leave all of them blank but your stream wont go anywhere."/>

                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0"><Run Text="Facebook Stream Key"/><Run Text=" "/><Hyperlink Click="Hyperlink_Click" TargetName="http://www.level51pc.com/blogs/multistreamer#facebook"><Run Text="(Get Key)"/></Hyperlink></TextBlock>
                    <TextBox Text="{Binding Settings.FacebookStreamKey}" Margin="0,5,0,0"/>
                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0"><Run Text="Twitch Stream Key"/><Run Text=" "/><Hyperlink Click="Hyperlink_Click" TargetName="http://www.level51pc.com/blogs/multistreamer#twitch"><Run Text="(Get Key)"/></Hyperlink></TextBlock>
                    <TextBox Text="{Binding Settings.TwitchStreamKey}" Margin="0,5,0,0"/>
                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0"><Run Text="YouTube Stream Key"/><Run Text=" "/><Hyperlink Click="Hyperlink_Click" TargetName="http://www.level51pc.com/blogs/multistreamer#youtube"><Run Text="(Get Key)"/></Hyperlink></TextBlock>
                    <TextBox Text="{Binding Settings.YouTubeStreamKey}" Margin="0,5,0,0"/>
                    <Button Content="Save Settings" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="200" Click="SaveSettings_Click" Margin="0,20,0,0"/>

                </StackPanel>
            </TabItem>
            <TabItem Header="LIVE!" HeaderTemplate="{DynamicResource TabHeader}">
                <StackPanel Margin="20,0,0,0">
                    <TextBlock TextWrapping="Wrap" Margin="0,10,10,0" Text="We use ffmpeg and nginx-rtmp-win32, please refer to respective projects for License Information. This program does not include any binaries from either project and their respective binaries are downloaded on your behalf when you click &quot;Setup + Start&quot;."/>
                    <TextBlock TextWrapping="Wrap" Margin="0,10,0,0"><Run Text="OBS Profile"/><Run Text=" "/><Hyperlink Click="Hyperlink_Click" TargetName="https://obsproject.com/help"><Run Text="(What is it?)"/></Hyperlink></TextBlock>
                    <ComboBox Margin="0,5,0,0" ItemsSource="{Binding OBSProfiles}" SelectedItem="{Binding OBSProfileSelected}"/>
                    <TextBlock TextWrapping="Wrap" Text="Facebook Live Bitrate" Margin="0,10,0,0"/>
                    <TextBlock TextWrapping="Wrap" Margin="0,-18,0,0" HorizontalAlignment="Right">
                        <Run Text="{Binding Settings.FacebookBitRate}"></Run>
                        <Run>
                            Kbps
                        </Run>
                    </TextBlock>
                    <Slider  Style="{DynamicResource FlatSlider}" Maximum="4000" Minimum="1000" SmallChange="1000" TickPlacement="BottomRight" TickFrequency="1000" AutoToolTipPlacement="BottomRight" LargeChange="1000" Margin="0,5,0,0" Value="{Binding Settings.FacebookBitRate}"/>
                    <Grid Height="100" Margin="0,20,0,0">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Height="100">
                                <Image HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Source="Images/nginx-card.png" Height="50"/>
                                <Ellipse x:Name="IndicatorNginx" Fill="#FF00D63A" Height="25" Stroke="White" Width="25" StrokeThickness="2"/>
                            </StackPanel>
                            <StackPanel x:Name="FeatureFFMpeg" Orientation="Vertical" Height="100" Margin="10,0,0,0">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="50">
                                    <Image Source="Images/ffmpeg.png"/>
                                </Border>
                                <Ellipse x:Name="IndicatorFFMpeg" Fill="#FF00D63A" Height="25" Stroke="White" Width="25" StrokeThickness="2"/>
                            </StackPanel>
                            <Image x:Name="FeatureQSV" Width="100" Source="Images/qsv.png" Margin="10,5,10,10"/>
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,0,0">
                            <Button Content="Setup + Start" HorizontalAlignment="Right" VerticalAlignment="Top" Width="200" Click="StartStreamer_Click"/>
                            <CheckBox Content="Offline Test" Margin="0,10,0,0" IsChecked="{Binding IsTestMode}"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="MONITOR" HeaderTemplate="{DynamicResource TabHeader}">
                <StackPanel Margin="20,0,0,0">

                    <WebBrowser x:Name="RTMPStat" Height="200" Navigated="RTMPStat_Navigated"/>

                    <Grid Height="250" Background="Black" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Vlc:VlcControl x:Name="VLCMain" Margin="0,30,0,10"/>
                        <Vlc:VlcControl x:Name="VLCFacebook" Margin="0,30,0,10" Grid.Column="1"/>

                        <TextBlock TextWrapping="Wrap" Text="Main Stream (Twitch/YouTube)" VerticalAlignment="Top" Background="#FF4B367C" TextAlignment="Center"/>
                        <TextBlock TextWrapping="Wrap" Text="Facebook" VerticalAlignment="Top" Background="#FF4267B2" TextAlignment="Center" Grid.Column="1"/>

                    </Grid>
                    <StackPanel Margin="0,10,0,0" Visibility="{Binding IsNeedToDownloadVLC, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        <TextBlock TextWrapping="Wrap" Text="Monitor uses VLC, we will download VLC redistributable on your behalf if existing VLC installation is not found in your system. Size of Download is 45MB." Width="556"/>
                        <Button Content="Download VLC and Enable Monitoring" Click="Monitoring_Click" Width="300" HorizontalAlignment="Right" Margin="0,10,0,0"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="DONATE" HeaderTemplate="{DynamicResource TabHeader}">
                <StackPanel Margin="20,0,0,0">
                    <TextBlock TextWrapping="Wrap" Margin="0,0,10,0" Text="If you found it useful and wish to give some thanks - you can buy me a beer via this BTC and ETH address:"/>
                    <Grid Height="250" Background="White" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Images/bxaddress.png" Grid.Column="0                                " Margin="0,30,0,10"/>
                        <TextBlock TextWrapping="Wrap" Text="BTC" VerticalAlignment="Top" Background="#FFFF7400" TextAlignment="Center"/>
                        <Image Source="Images/eth-address.png" Grid.Column="1" Margin="0,30,0,10" />
                        <TextBlock TextWrapping="Wrap" Text="ETH" VerticalAlignment="Top" Background="#FF3E3E3E" TextAlignment="Center" Grid.Column="1"/>

                    </Grid>

                </StackPanel>
            </TabItem>
        </TabControl>
        <ProgressBar Height="10" Margin="0" VerticalAlignment="Top" Maximum="1" SmallChange="0.05" Value="{Binding StatusProgress}" Background="{x:Null}" BorderBrush="{x:Null}" IsIndeterminate="{Binding StatusUnknown}"/>
        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding StatusText}" VerticalAlignment="Top" Margin="10,10,0,0" FontSize="8" Foreground="#FF616161"/>

    </Grid>
</Controls:MetroWindow>
